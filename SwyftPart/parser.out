Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    DQUOTE

Grammar

Rule 0     S' -> assignment
Rule 1     assignment -> IDENTIFIER IDENTIFIER EQUALS CLSTRING
Rule 2     assignment -> IDENTIFIER IDENTIFIER EQUALS CLIST
Rule 3     assignment -> IDENTIFIER IDENTIFIER EQUALS COUNT
Rule 4     DISPLAY -> IDENTIFIER LPAREN CLSTRING RPAREN
Rule 5     CLIST -> LBRACE CLSTRING COMMA CLSTRING COMMA CLSTRING RBRACE
Rule 6     COUNT -> IDENTIFIER DOT IDENTIFIER

Terminals, with rules where they appear

CLSTRING             : 1 4 5 5 5
COMMA                : 5 5
DOT                  : 6
DQUOTE               : 
EQUALS               : 1 2 3
IDENTIFIER           : 1 1 2 2 3 3 4 6 6
LBRACE               : 5
LPAREN               : 4
RBRACE               : 5
RPAREN               : 4
error                : 

Nonterminals, with rules where they appear

CLIST                : 2
COUNT                : 3
DISPLAY              : 
assignment           : 0

Parsing method: LALR

state 0

    (0) S' -> . assignment
    (1) assignment -> . IDENTIFIER IDENTIFIER EQUALS CLSTRING
    (2) assignment -> . IDENTIFIER IDENTIFIER EQUALS CLIST
    (3) assignment -> . IDENTIFIER IDENTIFIER EQUALS COUNT

    IDENTIFIER      shift and go to state 2

    assignment                     shift and go to state 1

state 1

    (0) S' -> assignment .



state 2

    (1) assignment -> IDENTIFIER . IDENTIFIER EQUALS CLSTRING
    (2) assignment -> IDENTIFIER . IDENTIFIER EQUALS CLIST
    (3) assignment -> IDENTIFIER . IDENTIFIER EQUALS COUNT

    IDENTIFIER      shift and go to state 3


state 3

    (1) assignment -> IDENTIFIER IDENTIFIER . EQUALS CLSTRING
    (2) assignment -> IDENTIFIER IDENTIFIER . EQUALS CLIST
    (3) assignment -> IDENTIFIER IDENTIFIER . EQUALS COUNT

    EQUALS          shift and go to state 4


state 4

    (1) assignment -> IDENTIFIER IDENTIFIER EQUALS . CLSTRING
    (2) assignment -> IDENTIFIER IDENTIFIER EQUALS . CLIST
    (3) assignment -> IDENTIFIER IDENTIFIER EQUALS . COUNT
    (5) CLIST -> . LBRACE CLSTRING COMMA CLSTRING COMMA CLSTRING RBRACE
    (6) COUNT -> . IDENTIFIER DOT IDENTIFIER

    CLSTRING        shift and go to state 5
    LBRACE          shift and go to state 9
    IDENTIFIER      shift and go to state 8

    CLIST                          shift and go to state 6
    COUNT                          shift and go to state 7

state 5

    (1) assignment -> IDENTIFIER IDENTIFIER EQUALS CLSTRING .

    $end            reduce using rule 1 (assignment -> IDENTIFIER IDENTIFIER EQUALS CLSTRING .)


state 6

    (2) assignment -> IDENTIFIER IDENTIFIER EQUALS CLIST .

    $end            reduce using rule 2 (assignment -> IDENTIFIER IDENTIFIER EQUALS CLIST .)


state 7

    (3) assignment -> IDENTIFIER IDENTIFIER EQUALS COUNT .

    $end            reduce using rule 3 (assignment -> IDENTIFIER IDENTIFIER EQUALS COUNT .)


state 8

    (6) COUNT -> IDENTIFIER . DOT IDENTIFIER

    DOT             shift and go to state 10


state 9

    (5) CLIST -> LBRACE . CLSTRING COMMA CLSTRING COMMA CLSTRING RBRACE

    CLSTRING        shift and go to state 11


state 10

    (6) COUNT -> IDENTIFIER DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 12


state 11

    (5) CLIST -> LBRACE CLSTRING . COMMA CLSTRING COMMA CLSTRING RBRACE

    COMMA           shift and go to state 13


state 12

    (6) COUNT -> IDENTIFIER DOT IDENTIFIER .

    $end            reduce using rule 6 (COUNT -> IDENTIFIER DOT IDENTIFIER .)


state 13

    (5) CLIST -> LBRACE CLSTRING COMMA . CLSTRING COMMA CLSTRING RBRACE

    CLSTRING        shift and go to state 14


state 14

    (5) CLIST -> LBRACE CLSTRING COMMA CLSTRING . COMMA CLSTRING RBRACE

    COMMA           shift and go to state 15


state 15

    (5) CLIST -> LBRACE CLSTRING COMMA CLSTRING COMMA . CLSTRING RBRACE

    CLSTRING        shift and go to state 16


state 16

    (5) CLIST -> LBRACE CLSTRING COMMA CLSTRING COMMA CLSTRING . RBRACE

    RBRACE          shift and go to state 17


state 17

    (5) CLIST -> LBRACE CLSTRING COMMA CLSTRING COMMA CLSTRING RBRACE .

    $end            reduce using rule 5 (CLIST -> LBRACE CLSTRING COMMA CLSTRING COMMA CLSTRING RBRACE .)

